profile:
  name: dev

#配置日志输出级别以观察SQL的执行情况：com.zwj.springboot.demo.mapper为MyBatis的Mapper接口路径。
logging:
  level:
    com.zwj.springboot.demo.mapper: debug
spring:
  datasource:
    druid:
      # 数据库访问配置, 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/springboot?characterEncoding=utf8
      username: root
      password: admin
      # 连接池配置
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 连接等待超时时间
      max-wait: 30000
      # 配置检测可以关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select '1' from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.springboot.servie.*


      # WebStatFilter配置
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'

      # StatViewServlet配置
      stat-view-servlet:
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台
        login-username: admin
        login-password: admin
        # IP白名单
        # allow: 127.0.0.1
        #　IP黑名单（共同存在时，deny优先于allow）
        # deny: 192.168.1.218

      # 配置StatFilter
      filter:
        stat:
          log-slow-sql: true
  thymeleaf:
    cache: false
#  redis:
#    #集群配置
##    cluster:
##      nodes: 127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005,127.0.0.1:7006
#    # Redis数据库索引（默认为0）
#    database: 0
#    # Redis服务器地址
#    host: localhost
#    # Redis服务器连接端口
#    port: 6379
#    key-serializer: org.springframework.data.redis.serializer.StringRedisSerializer
#    value-serializer: org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer

#一般开发中将spring.thymeleaf.cache设置为false，其他保持默认值即可。
##开启模板缓存（默认值：true）
#spring.thymeleaf.cache=true
##Check that the template exists before rendering it.
#spring.thymeleaf.check-template=true
##检查模板位置是否正确（默认值:true）
#spring.thymeleaf.check-template-location=true
##Content-Type的值（默认值：text/html）
#spring.thymeleaf.content-type=text/html
##开启MVC Thymeleaf视图解析（默认值：true）
#spring.thymeleaf.enabled=true
##模板编码
#spring.thymeleaf.encoding=UTF-8
##要被排除在解析之外的视图名称列表，用逗号分隔
#spring.thymeleaf.excluded-view-names=
##要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
#spring.thymeleaf.mode=HTML5
##在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
#spring.thymeleaf.prefix=classpath:/templates/
##在构建URL时添加到视图名称后的后缀（默认值：.html）
#spring.thymeleaf.suffix=.html
##Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
##可解析的视图名称列表，用逗号分隔
#spring.thymeleaf.view-names=